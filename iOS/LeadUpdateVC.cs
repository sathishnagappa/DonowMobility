// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using System.Collections.Generic;

namespace donow.iOS
{
	public partial class LeadUpdateVC : UIViewController
	{
		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			IList<string> ListThumbsDownReason = new List<string>
			{
				"Customer Cancelled",
				"No Show",
				"Need to Reschedule"
			};
			IList<string> ListCustomerCategorisation = new List<string>
			{
				"Dreamer",
				"Climber",
				"Purist"
			};
			IList<string> ListNextStep = new List<string>
			{
				"Get Product Info",
				"Purist"
			};

			ButtonLikeMeeting.SetImage(UIImage.FromBundle ("Thumbs Up White.png"), UIControlState.Selected);
			ButtonDisLikeMeeting.SetImage(UIImage.FromBundle ("Thumbs Down White.png"), UIControlState.Selected);
			ButtonLikeMeetingInfoHelpful.SetImage(UIImage.FromBundle ("Thumbs Up White.png"), UIControlState.Selected);
			ButtonDisLikeMeetingInfoHelpful.SetImage(UIImage.FromBundle ("Thumbs Down White.png"), UIControlState.Selected);
			ButtonLikeLeadAdvanced.SetImage(UIImage.FromBundle ("Thumbs Up White.png"), UIControlState.Selected);
			ButtonDisLikeLeadAdvanced.SetImage(UIImage.FromBundle ("Thumbs Down White.png"), UIControlState.Selected);

			ButtonMeetingDislikeReasonDropDown.TouchUpInside += (object sender, EventArgs e) => {
			
				TableViewInteractionDislikeReason.Source = new TableSource (ListThumbsDownReason, this);
			};
			
			ButtonCustomerCategorizationDropDown.TouchUpInside += (object sender, EventArgs e) =>  {
				TableViewCustomerCategorization.Source = new TableSource (ListCustomerCategorisation, this);
			};

			ButtonNextStepsDropDown.TouchUpInside += (object sender, EventArgs e) =>  {
				TableViewNextSteps.Source = new TableSource (ListNextStep, this);
			};
		}

		public class TableSource : UITableViewSource {

			IList<string> TableItems;
			string CellIdentifier = "TableCell";

			LeadUpdateVC leadUpdateVC;

			public TableSource (IList<string> items, LeadUpdateVC leadUpdateVC)
			{
				this.leadUpdateVC = leadUpdateVC;
				TableItems = items;
			}


			public override nint RowsInSection (UITableView tableview, nint section)
			{
				return TableItems.Count;
			}

			public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
			{
				UITableViewCell cell = tableView.DequeueReusableCell (CellIdentifier);
				string item = TableItems[indexPath.Row];

				//---- if there are no cells to reuse, create a new one
				if (cell == null)
				{ cell = new UITableViewCell (UITableViewCellStyle.Default, CellIdentifier); }

				cell.TextLabel.Text = item;

				return cell;
			}


			public override void RowSelected(UITableView tableView, NSIndexPath indexPath)
			{

			}

		}

	}
}
